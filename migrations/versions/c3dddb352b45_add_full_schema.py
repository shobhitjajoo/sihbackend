"""add full schema

Revision ID: c3dddb352b45
Revises: 58587514da1d
Create Date: 2025-09-14 11:22:12.047313

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c3dddb352b45'
down_revision: Union[str, Sequence[str], None] = '58587514da1d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('superadmins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_superadmins_id'), 'superadmins', ['id'], unique=False)
    op.create_table('administrators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('superadmin_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['superadmin_id'], ['superadmins.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_administrators_id'), 'administrators', ['id'], unique=False)
    op.create_table('schools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('administrator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['administrator_id'], ['administrators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schools_id'), 'schools', ['id'], unique=False)
    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classes_id'), 'classes', ['id'], unique=False)
    op.drop_index(op.f('ix_admins_id'), table_name='admins')
    op.drop_table('admins')
    op.add_column('attendance', sa.Column('teacher_id', sa.Integer(), nullable=False))
    op.alter_column('attendance', 'date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=True)
    op.drop_constraint(op.f('attendance_marked_by_fkey'), 'attendance', type_='foreignkey')
    op.create_foreign_key(None, 'attendance', 'teachers', ['teacher_id'], ['id'])
    op.drop_column('attendance', 'created_at')
    op.drop_column('attendance', 'marked_by')
    op.add_column('students', sa.Column('class_id', sa.Integer(), nullable=False))
    op.add_column('students', sa.Column('school_id', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('students_roll_no_key'), 'students', type_='unique')
    op.create_foreign_key(None, 'students', 'schools', ['school_id'], ['id'])
    op.create_foreign_key(None, 'students', 'classes', ['class_id'], ['id'])
    op.drop_column('students', 'class')
    op.add_column('teachers', sa.Column('school_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'teachers', 'schools', ['school_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'teachers', type_='foreignkey')
    op.drop_column('teachers', 'school_id')
    op.add_column('students', sa.Column('class', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_unique_constraint(op.f('students_roll_no_key'), 'students', ['roll_no'], postgresql_nulls_not_distinct=False)
    op.drop_column('students', 'school_id')
    op.drop_column('students', 'class_id')
    op.add_column('attendance', sa.Column('marked_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('attendance', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'attendance', type_='foreignkey')
    op.create_foreign_key(op.f('attendance_marked_by_fkey'), 'attendance', 'teachers', ['marked_by'], ['id'])
    op.alter_column('attendance', 'date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=False)
    op.drop_column('attendance', 'teacher_id')
    op.create_table('admins',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('admins_pkey')),
    sa.UniqueConstraint('email', name=op.f('admins_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_admins_id'), 'admins', ['id'], unique=False)
    op.drop_index(op.f('ix_classes_id'), table_name='classes')
    op.drop_table('classes')
    op.drop_index(op.f('ix_schools_id'), table_name='schools')
    op.drop_table('schools')
    op.drop_index(op.f('ix_administrators_id'), table_name='administrators')
    op.drop_table('administrators')
    op.drop_index(op.f('ix_superadmins_id'), table_name='superadmins')
    op.drop_table('superadmins')
    # ### end Alembic commands ###
